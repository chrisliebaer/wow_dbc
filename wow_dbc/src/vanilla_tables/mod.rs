pub mod animation_data;
pub mod area_poi;
pub mod area_table;
pub mod area_trigger;
pub mod attack_anim_kits;
pub mod attack_anim_types;
pub mod auction_house;
pub mod bank_bag_slot_prices;
pub mod camera_shakes;
pub mod cfg_categories;
pub mod cfg_configs;
pub mod char_base_info;
pub mod char_hair_geosets;
pub mod char_hair_textures;
pub mod char_sections;
pub mod char_start_outfit;
pub mod char_variations;
pub mod character_create_cameras;
pub mod character_facial_hair_styles;
pub mod chat_channels;
pub mod chat_profanity;
pub mod chr_classes;
pub mod chr_races;
pub mod cinematic_camera;
pub mod cinematic_sequences;
pub mod creature_display_info;
pub mod creature_display_info_extra;
pub mod creature_family;
pub mod creature_model_data;
pub mod creature_sound_data;
pub mod creature_spell_data;
pub mod creature_type;
pub mod death_thud_lookups;
pub mod durability_costs;
pub mod durability_quality;
pub mod emotes;
pub mod emotes_text;
pub mod emotes_text_data;
pub mod emotes_text_sound;
pub mod environmental_damage;
pub mod exhaustion;
pub mod faction;
pub mod faction_group;
pub mod faction_template;
pub mod footprint_textures;
pub mod footstep_terrain_lookup;
pub mod game_object_art_kit;
pub mod game_object_display_info;
pub mod game_tips;
pub mod gm_survey_current_survey;
pub mod gm_survey_questions;
pub mod gm_survey_surveys;
pub mod gm_ticket_category;
pub mod ground_effect_doodad;
pub mod ground_effect_texture;
pub mod helmet_geoset_vis_data;
pub mod item_bag_family;
pub mod item_class;
pub mod item_display_info;
pub mod item_group_sounds;
pub mod item_pet_food;
pub mod item_random_properties;
pub mod item_set;
pub mod item_sub_class;
pub mod item_sub_class_mask;
pub mod item_visual_effects;
pub mod item_visuals;
pub mod language_words;
pub mod languages;
pub mod lfg_dungeons;
pub mod light;
pub mod light_float_band;
pub mod light_int_band;
pub mod light_params;
pub mod light_skybox;
pub mod liquid_type;
pub mod loading_screen_taxi_splines;
pub mod loading_screens;
pub mod lock;
pub mod lock_type;
pub mod mail_template;
pub mod map;
pub mod material;
pub mod name_gen;
pub mod names_profanity;
pub mod names_reserved;
pub mod npc_sounds;
pub mod package;
pub mod page_text_material;
pub mod paper_doll_item_frame;
pub mod pet_loyalty;
pub mod pet_personality;
pub mod quest_info;
pub mod quest_sort;
pub mod resistances;
pub mod server_messages;
pub mod sheathe_sound_lookups;
pub mod skill_costs_data;
pub mod skill_line;
pub mod skill_line_ability;
pub mod skill_line_category;
pub mod skill_race_class_info;
pub mod skill_tiers;
pub mod sound_ambience;
pub mod sound_character_macro_lines;
pub mod sound_entries;
pub mod sound_provider_preferences;
pub mod sound_sample_preferences;
pub mod sound_water_type;
pub mod spam_messages;
pub mod spell;
pub mod spell_aura_names;
pub mod spell_cast_times;
pub mod spell_category;
pub mod spell_chain_effects;
pub mod spell_dispel_type;
pub mod spell_duration;
pub mod spell_effect_camera_shakes;
pub mod spell_effect_names;
pub mod spell_focus_object;
pub mod spell_icon;
pub mod spell_item_enchantment;
pub mod spell_mechanic;
pub mod spell_radius;
pub mod spell_range;
pub mod spell_shapeshift_form;
pub mod spell_visual;
pub mod spell_visual_effect_name;
pub mod spell_visual_kit;
pub mod spell_visual_precast_transitions;
pub mod stable_slot_prices;
pub mod startup_strings;
pub mod stationery;
pub mod string_lookups;
pub mod talent;
pub mod talent_tab;
pub mod taxi_nodes;
pub mod taxi_path;
pub mod taxi_path_node;
pub mod terrain_type;
pub mod terrain_type_sounds;
pub mod transport_animation;
pub mod ui_sound_lookups;
pub mod unit_blood;
pub mod unit_blood_levels;
pub mod video_hardware;
pub mod vocal_ui_sounds;
pub mod weapon_impact_sounds;
pub mod weapon_swing_sounds2;
pub mod wmo_area_table;
pub mod world_map_area;
pub mod world_map_continent;
pub mod world_map_overlay;
pub mod world_safe_locs;
pub mod world_state_ui;
pub mod wow_error_strings;
pub mod zone_intro_music_table;
pub mod zone_music;

use crate::{DbcTable, DbcTableEnum, DbcTableWriter};
use crate::load_table_to_enum;
#[derive(Copy, Clone, PartialEq, Eq, Hash, Debug)]
pub enum VanillaTableName {
    AnimationData,
    AreaPOI,
    AreaTable,
    AreaTrigger,
    AttackAnimKits,
    AttackAnimTypes,
    AuctionHouse,
    BankBagSlotPrices,
    CameraShakes,
    Cfg_Categories,
    Cfg_Configs,
    CharBaseInfo,
    CharHairGeosets,
    CharHairTextures,
    CharSections,
    CharStartOutfit,
    CharVariations,
    CharacterCreateCameras,
    CharacterFacialHairStyles,
    ChatChannels,
    ChatProfanity,
    ChrClasses,
    ChrRaces,
    CinematicCamera,
    CinematicSequences,
    CreatureDisplayInfo,
    CreatureDisplayInfoExtra,
    CreatureFamily,
    CreatureModelData,
    CreatureSoundData,
    CreatureSpellData,
    CreatureType,
    DeathThudLookups,
    DurabilityCosts,
    DurabilityQuality,
    Emotes,
    EmotesText,
    EmotesTextData,
    EmotesTextSound,
    EnvironmentalDamage,
    Exhaustion,
    Faction,
    FactionGroup,
    FactionTemplate,
    FootprintTextures,
    FootstepTerrainLookup,
    GMSurveyCurrentSurvey,
    GMSurveyQuestions,
    GMSurveySurveys,
    GMTicketCategory,
    GameObjectArtKit,
    GameObjectDisplayInfo,
    GameTips,
    GroundEffectDoodad,
    GroundEffectTexture,
    HelmetGeosetVisData,
    ItemBagFamily,
    ItemClass,
    ItemDisplayInfo,
    ItemGroupSounds,
    ItemPetFood,
    ItemRandomProperties,
    ItemSet,
    ItemSubClass,
    ItemSubClassMask,
    ItemVisualEffects,
    ItemVisuals,
    LFGDungeons,
    LanguageWords,
    Languages,
    Light,
    LightFloatBand,
    LightIntBand,
    LightParams,
    LightSkybox,
    LiquidType,
    LoadingScreenTaxiSplines,
    LoadingScreens,
    Lock,
    LockType,
    MailTemplate,
    Map,
    Material,
    NPCSounds,
    NameGen,
    NamesProfanity,
    NamesReserved,
    Package,
    PageTextMaterial,
    PaperDollItemFrame,
    PetLoyalty,
    PetPersonality,
    QuestInfo,
    QuestSort,
    Resistances,
    ServerMessages,
    SheatheSoundLookups,
    SkillCostsData,
    SkillLine,
    SkillLineAbility,
    SkillLineCategory,
    SkillRaceClassInfo,
    SkillTiers,
    SoundAmbience,
    SoundCharacterMacroLines,
    SoundEntries,
    SoundProviderPreferences,
    SoundSamplePreferences,
    SoundWaterType,
    SpamMessages,
    Spell,
    SpellAuraNames,
    SpellCastTimes,
    SpellCategory,
    SpellChainEffects,
    SpellDispelType,
    SpellDuration,
    SpellEffectCameraShakes,
    SpellEffectNames,
    SpellFocusObject,
    SpellIcon,
    SpellItemEnchantment,
    SpellMechanic,
    SpellRadius,
    SpellRange,
    SpellShapeshiftForm,
    SpellVisual,
    SpellVisualEffectName,
    SpellVisualKit,
    SpellVisualPrecastTransitions,
    StableSlotPrices,
    Startup_Strings,
    Stationery,
    StringLookups,
    Talent,
    TalentTab,
    TaxiNodes,
    TaxiPath,
    TaxiPathNode,
    TerrainType,
    TerrainTypeSounds,
    TransportAnimation,
    UISoundLookups,
    UnitBlood,
    UnitBloodLevels,
    VideoHardware,
    VocalUISounds,
    WMOAreaTable,
    WeaponImpactSounds,
    WeaponSwingSounds2,
    WorldMapArea,
    WorldMapContinent,
    WorldMapOverlay,
    WorldSafeLocs,
    WorldStateUI,
    WowError_Strings,
    ZoneIntroMusicTable,
    ZoneMusic,
}

#[derive(Debug)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
#[cfg_attr(feature = "serde", serde(tag = "type"))]
pub enum VanillaTable {
    AnimationData(animation_data::AnimationData),
    AreaPOI(area_poi::AreaPOI),
    AreaTable(area_table::AreaTable),
    AreaTrigger(area_trigger::AreaTrigger),
    AttackAnimKits(attack_anim_kits::AttackAnimKits),
    AttackAnimTypes(attack_anim_types::AttackAnimTypes),
    AuctionHouse(auction_house::AuctionHouse),
    BankBagSlotPrices(bank_bag_slot_prices::BankBagSlotPrices),
    CameraShakes(camera_shakes::CameraShakes),
    Cfg_Categories(cfg_categories::Cfg_Categories),
    Cfg_Configs(cfg_configs::Cfg_Configs),
    CharBaseInfo(char_base_info::CharBaseInfo),
    CharHairGeosets(char_hair_geosets::CharHairGeosets),
    CharHairTextures(char_hair_textures::CharHairTextures),
    CharSections(char_sections::CharSections),
    CharStartOutfit(char_start_outfit::CharStartOutfit),
    CharVariations(char_variations::CharVariations),
    CharacterCreateCameras(character_create_cameras::CharacterCreateCameras),
    CharacterFacialHairStyles(character_facial_hair_styles::CharacterFacialHairStyles),
    ChatChannels(chat_channels::ChatChannels),
    ChatProfanity(chat_profanity::ChatProfanity),
    ChrClasses(chr_classes::ChrClasses),
    ChrRaces(chr_races::ChrRaces),
    CinematicCamera(cinematic_camera::CinematicCamera),
    CinematicSequences(cinematic_sequences::CinematicSequences),
    CreatureDisplayInfo(creature_display_info::CreatureDisplayInfo),
    CreatureDisplayInfoExtra(creature_display_info_extra::CreatureDisplayInfoExtra),
    CreatureFamily(creature_family::CreatureFamily),
    CreatureModelData(creature_model_data::CreatureModelData),
    CreatureSoundData(creature_sound_data::CreatureSoundData),
    CreatureSpellData(creature_spell_data::CreatureSpellData),
    CreatureType(creature_type::CreatureType),
    DeathThudLookups(death_thud_lookups::DeathThudLookups),
    DurabilityCosts(durability_costs::DurabilityCosts),
    DurabilityQuality(durability_quality::DurabilityQuality),
    Emotes(emotes::Emotes),
    EmotesText(emotes_text::EmotesText),
    EmotesTextData(emotes_text_data::EmotesTextData),
    EmotesTextSound(emotes_text_sound::EmotesTextSound),
    EnvironmentalDamage(environmental_damage::EnvironmentalDamage),
    Exhaustion(exhaustion::Exhaustion),
    Faction(faction::Faction),
    FactionGroup(faction_group::FactionGroup),
    FactionTemplate(faction_template::FactionTemplate),
    FootprintTextures(footprint_textures::FootprintTextures),
    FootstepTerrainLookup(footstep_terrain_lookup::FootstepTerrainLookup),
    GMSurveyCurrentSurvey(gm_survey_current_survey::GMSurveyCurrentSurvey),
    GMSurveyQuestions(gm_survey_questions::GMSurveyQuestions),
    GMSurveySurveys(gm_survey_surveys::GMSurveySurveys),
    GMTicketCategory(gm_ticket_category::GMTicketCategory),
    GameObjectArtKit(game_object_art_kit::GameObjectArtKit),
    GameObjectDisplayInfo(game_object_display_info::GameObjectDisplayInfo),
    GameTips(game_tips::GameTips),
    GroundEffectDoodad(ground_effect_doodad::GroundEffectDoodad),
    GroundEffectTexture(ground_effect_texture::GroundEffectTexture),
    HelmetGeosetVisData(helmet_geoset_vis_data::HelmetGeosetVisData),
    ItemBagFamily(item_bag_family::ItemBagFamily),
    ItemClass(item_class::ItemClass),
    ItemDisplayInfo(item_display_info::ItemDisplayInfo),
    ItemGroupSounds(item_group_sounds::ItemGroupSounds),
    ItemPetFood(item_pet_food::ItemPetFood),
    ItemRandomProperties(item_random_properties::ItemRandomProperties),
    ItemSet(item_set::ItemSet),
    ItemSubClass(item_sub_class::ItemSubClass),
    ItemSubClassMask(item_sub_class_mask::ItemSubClassMask),
    ItemVisualEffects(item_visual_effects::ItemVisualEffects),
    ItemVisuals(item_visuals::ItemVisuals),
    LFGDungeons(lfg_dungeons::LFGDungeons),
    LanguageWords(language_words::LanguageWords),
    Languages(languages::Languages),
    Light(light::Light),
    LightFloatBand(light_float_band::LightFloatBand),
    LightIntBand(light_int_band::LightIntBand),
    LightParams(light_params::LightParams),
    LightSkybox(light_skybox::LightSkybox),
    LiquidType(liquid_type::LiquidType),
    LoadingScreenTaxiSplines(loading_screen_taxi_splines::LoadingScreenTaxiSplines),
    LoadingScreens(loading_screens::LoadingScreens),
    Lock(lock::Lock),
    LockType(lock_type::LockType),
    MailTemplate(mail_template::MailTemplate),
    Map(map::Map),
    Material(material::Material),
    NPCSounds(npc_sounds::NPCSounds),
    NameGen(name_gen::NameGen),
    NamesProfanity(names_profanity::NamesProfanity),
    NamesReserved(names_reserved::NamesReserved),
    Package(package::Package),
    PageTextMaterial(page_text_material::PageTextMaterial),
    PaperDollItemFrame(paper_doll_item_frame::PaperDollItemFrame),
    PetLoyalty(pet_loyalty::PetLoyalty),
    PetPersonality(pet_personality::PetPersonality),
    QuestInfo(quest_info::QuestInfo),
    QuestSort(quest_sort::QuestSort),
    Resistances(resistances::Resistances),
    ServerMessages(server_messages::ServerMessages),
    SheatheSoundLookups(sheathe_sound_lookups::SheatheSoundLookups),
    SkillCostsData(skill_costs_data::SkillCostsData),
    SkillLine(skill_line::SkillLine),
    SkillLineAbility(skill_line_ability::SkillLineAbility),
    SkillLineCategory(skill_line_category::SkillLineCategory),
    SkillRaceClassInfo(skill_race_class_info::SkillRaceClassInfo),
    SkillTiers(skill_tiers::SkillTiers),
    SoundAmbience(sound_ambience::SoundAmbience),
    SoundCharacterMacroLines(sound_character_macro_lines::SoundCharacterMacroLines),
    SoundEntries(sound_entries::SoundEntries),
    SoundProviderPreferences(sound_provider_preferences::SoundProviderPreferences),
    SoundSamplePreferences(sound_sample_preferences::SoundSamplePreferences),
    SoundWaterType(sound_water_type::SoundWaterType),
    SpamMessages(spam_messages::SpamMessages),
    Spell(spell::Spell),
    SpellAuraNames(spell_aura_names::SpellAuraNames),
    SpellCastTimes(spell_cast_times::SpellCastTimes),
    SpellCategory(spell_category::SpellCategory),
    SpellChainEffects(spell_chain_effects::SpellChainEffects),
    SpellDispelType(spell_dispel_type::SpellDispelType),
    SpellDuration(spell_duration::SpellDuration),
    SpellEffectCameraShakes(spell_effect_camera_shakes::SpellEffectCameraShakes),
    SpellEffectNames(spell_effect_names::SpellEffectNames),
    SpellFocusObject(spell_focus_object::SpellFocusObject),
    SpellIcon(spell_icon::SpellIcon),
    SpellItemEnchantment(spell_item_enchantment::SpellItemEnchantment),
    SpellMechanic(spell_mechanic::SpellMechanic),
    SpellRadius(spell_radius::SpellRadius),
    SpellRange(spell_range::SpellRange),
    SpellShapeshiftForm(spell_shapeshift_form::SpellShapeshiftForm),
    SpellVisual(spell_visual::SpellVisual),
    SpellVisualEffectName(spell_visual_effect_name::SpellVisualEffectName),
    SpellVisualKit(spell_visual_kit::SpellVisualKit),
    SpellVisualPrecastTransitions(spell_visual_precast_transitions::SpellVisualPrecastTransitions),
    StableSlotPrices(stable_slot_prices::StableSlotPrices),
    Startup_Strings(startup_strings::Startup_Strings),
    Stationery(stationery::Stationery),
    StringLookups(string_lookups::StringLookups),
    Talent(talent::Talent),
    TalentTab(talent_tab::TalentTab),
    TaxiNodes(taxi_nodes::TaxiNodes),
    TaxiPath(taxi_path::TaxiPath),
    TaxiPathNode(taxi_path_node::TaxiPathNode),
    TerrainType(terrain_type::TerrainType),
    TerrainTypeSounds(terrain_type_sounds::TerrainTypeSounds),
    TransportAnimation(transport_animation::TransportAnimation),
    UISoundLookups(ui_sound_lookups::UISoundLookups),
    UnitBlood(unit_blood::UnitBlood),
    UnitBloodLevels(unit_blood_levels::UnitBloodLevels),
    VideoHardware(video_hardware::VideoHardware),
    VocalUISounds(vocal_ui_sounds::VocalUISounds),
    WMOAreaTable(wmo_area_table::WMOAreaTable),
    WeaponImpactSounds(weapon_impact_sounds::WeaponImpactSounds),
    WeaponSwingSounds2(weapon_swing_sounds2::WeaponSwingSounds2),
    WorldMapArea(world_map_area::WorldMapArea),
    WorldMapContinent(world_map_continent::WorldMapContinent),
    WorldMapOverlay(world_map_overlay::WorldMapOverlay),
    WorldSafeLocs(world_safe_locs::WorldSafeLocs),
    WorldStateUI(world_state_ui::WorldStateUI),
    WowError_Strings(wow_error_strings::WowError_Strings),
    ZoneIntroMusicTable(zone_intro_music_table::ZoneIntroMusicTable),
    ZoneMusic(zone_music::ZoneMusic),
}

impl DbcTableEnum<VanillaTable> for VanillaTableName {
    fn load(self, b: &mut impl std::io::Read) -> Result<VanillaTable, crate::DbcError> {
        match self {
            Self::AnimationData => load_table_to_enum::<animation_data::AnimationData, VanillaTable>(b),
            Self::AreaPOI => load_table_to_enum::<area_poi::AreaPOI, VanillaTable>(b),
            Self::AreaTable => load_table_to_enum::<area_table::AreaTable, VanillaTable>(b),
            Self::AreaTrigger => load_table_to_enum::<area_trigger::AreaTrigger, VanillaTable>(b),
            Self::AttackAnimKits => load_table_to_enum::<attack_anim_kits::AttackAnimKits, VanillaTable>(b),
            Self::AttackAnimTypes => load_table_to_enum::<attack_anim_types::AttackAnimTypes, VanillaTable>(b),
            Self::AuctionHouse => load_table_to_enum::<auction_house::AuctionHouse, VanillaTable>(b),
            Self::BankBagSlotPrices => load_table_to_enum::<bank_bag_slot_prices::BankBagSlotPrices, VanillaTable>(b),
            Self::CameraShakes => load_table_to_enum::<camera_shakes::CameraShakes, VanillaTable>(b),
            Self::Cfg_Categories => load_table_to_enum::<cfg_categories::Cfg_Categories, VanillaTable>(b),
            Self::Cfg_Configs => load_table_to_enum::<cfg_configs::Cfg_Configs, VanillaTable>(b),
            Self::CharBaseInfo => load_table_to_enum::<char_base_info::CharBaseInfo, VanillaTable>(b),
            Self::CharHairGeosets => load_table_to_enum::<char_hair_geosets::CharHairGeosets, VanillaTable>(b),
            Self::CharHairTextures => load_table_to_enum::<char_hair_textures::CharHairTextures, VanillaTable>(b),
            Self::CharSections => load_table_to_enum::<char_sections::CharSections, VanillaTable>(b),
            Self::CharStartOutfit => load_table_to_enum::<char_start_outfit::CharStartOutfit, VanillaTable>(b),
            Self::CharVariations => load_table_to_enum::<char_variations::CharVariations, VanillaTable>(b),
            Self::CharacterCreateCameras => load_table_to_enum::<character_create_cameras::CharacterCreateCameras, VanillaTable>(b),
            Self::CharacterFacialHairStyles => load_table_to_enum::<character_facial_hair_styles::CharacterFacialHairStyles, VanillaTable>(b),
            Self::ChatChannels => load_table_to_enum::<chat_channels::ChatChannels, VanillaTable>(b),
            Self::ChatProfanity => load_table_to_enum::<chat_profanity::ChatProfanity, VanillaTable>(b),
            Self::ChrClasses => load_table_to_enum::<chr_classes::ChrClasses, VanillaTable>(b),
            Self::ChrRaces => load_table_to_enum::<chr_races::ChrRaces, VanillaTable>(b),
            Self::CinematicCamera => load_table_to_enum::<cinematic_camera::CinematicCamera, VanillaTable>(b),
            Self::CinematicSequences => load_table_to_enum::<cinematic_sequences::CinematicSequences, VanillaTable>(b),
            Self::CreatureDisplayInfo => load_table_to_enum::<creature_display_info::CreatureDisplayInfo, VanillaTable>(b),
            Self::CreatureDisplayInfoExtra => load_table_to_enum::<creature_display_info_extra::CreatureDisplayInfoExtra, VanillaTable>(b),
            Self::CreatureFamily => load_table_to_enum::<creature_family::CreatureFamily, VanillaTable>(b),
            Self::CreatureModelData => load_table_to_enum::<creature_model_data::CreatureModelData, VanillaTable>(b),
            Self::CreatureSoundData => load_table_to_enum::<creature_sound_data::CreatureSoundData, VanillaTable>(b),
            Self::CreatureSpellData => load_table_to_enum::<creature_spell_data::CreatureSpellData, VanillaTable>(b),
            Self::CreatureType => load_table_to_enum::<creature_type::CreatureType, VanillaTable>(b),
            Self::DeathThudLookups => load_table_to_enum::<death_thud_lookups::DeathThudLookups, VanillaTable>(b),
            Self::DurabilityCosts => load_table_to_enum::<durability_costs::DurabilityCosts, VanillaTable>(b),
            Self::DurabilityQuality => load_table_to_enum::<durability_quality::DurabilityQuality, VanillaTable>(b),
            Self::Emotes => load_table_to_enum::<emotes::Emotes, VanillaTable>(b),
            Self::EmotesText => load_table_to_enum::<emotes_text::EmotesText, VanillaTable>(b),
            Self::EmotesTextData => load_table_to_enum::<emotes_text_data::EmotesTextData, VanillaTable>(b),
            Self::EmotesTextSound => load_table_to_enum::<emotes_text_sound::EmotesTextSound, VanillaTable>(b),
            Self::EnvironmentalDamage => load_table_to_enum::<environmental_damage::EnvironmentalDamage, VanillaTable>(b),
            Self::Exhaustion => load_table_to_enum::<exhaustion::Exhaustion, VanillaTable>(b),
            Self::Faction => load_table_to_enum::<faction::Faction, VanillaTable>(b),
            Self::FactionGroup => load_table_to_enum::<faction_group::FactionGroup, VanillaTable>(b),
            Self::FactionTemplate => load_table_to_enum::<faction_template::FactionTemplate, VanillaTable>(b),
            Self::FootprintTextures => load_table_to_enum::<footprint_textures::FootprintTextures, VanillaTable>(b),
            Self::FootstepTerrainLookup => load_table_to_enum::<footstep_terrain_lookup::FootstepTerrainLookup, VanillaTable>(b),
            Self::GMSurveyCurrentSurvey => load_table_to_enum::<gm_survey_current_survey::GMSurveyCurrentSurvey, VanillaTable>(b),
            Self::GMSurveyQuestions => load_table_to_enum::<gm_survey_questions::GMSurveyQuestions, VanillaTable>(b),
            Self::GMSurveySurveys => load_table_to_enum::<gm_survey_surveys::GMSurveySurveys, VanillaTable>(b),
            Self::GMTicketCategory => load_table_to_enum::<gm_ticket_category::GMTicketCategory, VanillaTable>(b),
            Self::GameObjectArtKit => load_table_to_enum::<game_object_art_kit::GameObjectArtKit, VanillaTable>(b),
            Self::GameObjectDisplayInfo => load_table_to_enum::<game_object_display_info::GameObjectDisplayInfo, VanillaTable>(b),
            Self::GameTips => load_table_to_enum::<game_tips::GameTips, VanillaTable>(b),
            Self::GroundEffectDoodad => load_table_to_enum::<ground_effect_doodad::GroundEffectDoodad, VanillaTable>(b),
            Self::GroundEffectTexture => load_table_to_enum::<ground_effect_texture::GroundEffectTexture, VanillaTable>(b),
            Self::HelmetGeosetVisData => load_table_to_enum::<helmet_geoset_vis_data::HelmetGeosetVisData, VanillaTable>(b),
            Self::ItemBagFamily => load_table_to_enum::<item_bag_family::ItemBagFamily, VanillaTable>(b),
            Self::ItemClass => load_table_to_enum::<item_class::ItemClass, VanillaTable>(b),
            Self::ItemDisplayInfo => load_table_to_enum::<item_display_info::ItemDisplayInfo, VanillaTable>(b),
            Self::ItemGroupSounds => load_table_to_enum::<item_group_sounds::ItemGroupSounds, VanillaTable>(b),
            Self::ItemPetFood => load_table_to_enum::<item_pet_food::ItemPetFood, VanillaTable>(b),
            Self::ItemRandomProperties => load_table_to_enum::<item_random_properties::ItemRandomProperties, VanillaTable>(b),
            Self::ItemSet => load_table_to_enum::<item_set::ItemSet, VanillaTable>(b),
            Self::ItemSubClass => load_table_to_enum::<item_sub_class::ItemSubClass, VanillaTable>(b),
            Self::ItemSubClassMask => load_table_to_enum::<item_sub_class_mask::ItemSubClassMask, VanillaTable>(b),
            Self::ItemVisualEffects => load_table_to_enum::<item_visual_effects::ItemVisualEffects, VanillaTable>(b),
            Self::ItemVisuals => load_table_to_enum::<item_visuals::ItemVisuals, VanillaTable>(b),
            Self::LFGDungeons => load_table_to_enum::<lfg_dungeons::LFGDungeons, VanillaTable>(b),
            Self::LanguageWords => load_table_to_enum::<language_words::LanguageWords, VanillaTable>(b),
            Self::Languages => load_table_to_enum::<languages::Languages, VanillaTable>(b),
            Self::Light => load_table_to_enum::<light::Light, VanillaTable>(b),
            Self::LightFloatBand => load_table_to_enum::<light_float_band::LightFloatBand, VanillaTable>(b),
            Self::LightIntBand => load_table_to_enum::<light_int_band::LightIntBand, VanillaTable>(b),
            Self::LightParams => load_table_to_enum::<light_params::LightParams, VanillaTable>(b),
            Self::LightSkybox => load_table_to_enum::<light_skybox::LightSkybox, VanillaTable>(b),
            Self::LiquidType => load_table_to_enum::<liquid_type::LiquidType, VanillaTable>(b),
            Self::LoadingScreenTaxiSplines => load_table_to_enum::<loading_screen_taxi_splines::LoadingScreenTaxiSplines, VanillaTable>(b),
            Self::LoadingScreens => load_table_to_enum::<loading_screens::LoadingScreens, VanillaTable>(b),
            Self::Lock => load_table_to_enum::<lock::Lock, VanillaTable>(b),
            Self::LockType => load_table_to_enum::<lock_type::LockType, VanillaTable>(b),
            Self::MailTemplate => load_table_to_enum::<mail_template::MailTemplate, VanillaTable>(b),
            Self::Map => load_table_to_enum::<map::Map, VanillaTable>(b),
            Self::Material => load_table_to_enum::<material::Material, VanillaTable>(b),
            Self::NPCSounds => load_table_to_enum::<npc_sounds::NPCSounds, VanillaTable>(b),
            Self::NameGen => load_table_to_enum::<name_gen::NameGen, VanillaTable>(b),
            Self::NamesProfanity => load_table_to_enum::<names_profanity::NamesProfanity, VanillaTable>(b),
            Self::NamesReserved => load_table_to_enum::<names_reserved::NamesReserved, VanillaTable>(b),
            Self::Package => load_table_to_enum::<package::Package, VanillaTable>(b),
            Self::PageTextMaterial => load_table_to_enum::<page_text_material::PageTextMaterial, VanillaTable>(b),
            Self::PaperDollItemFrame => load_table_to_enum::<paper_doll_item_frame::PaperDollItemFrame, VanillaTable>(b),
            Self::PetLoyalty => load_table_to_enum::<pet_loyalty::PetLoyalty, VanillaTable>(b),
            Self::PetPersonality => load_table_to_enum::<pet_personality::PetPersonality, VanillaTable>(b),
            Self::QuestInfo => load_table_to_enum::<quest_info::QuestInfo, VanillaTable>(b),
            Self::QuestSort => load_table_to_enum::<quest_sort::QuestSort, VanillaTable>(b),
            Self::Resistances => load_table_to_enum::<resistances::Resistances, VanillaTable>(b),
            Self::ServerMessages => load_table_to_enum::<server_messages::ServerMessages, VanillaTable>(b),
            Self::SheatheSoundLookups => load_table_to_enum::<sheathe_sound_lookups::SheatheSoundLookups, VanillaTable>(b),
            Self::SkillCostsData => load_table_to_enum::<skill_costs_data::SkillCostsData, VanillaTable>(b),
            Self::SkillLine => load_table_to_enum::<skill_line::SkillLine, VanillaTable>(b),
            Self::SkillLineAbility => load_table_to_enum::<skill_line_ability::SkillLineAbility, VanillaTable>(b),
            Self::SkillLineCategory => load_table_to_enum::<skill_line_category::SkillLineCategory, VanillaTable>(b),
            Self::SkillRaceClassInfo => load_table_to_enum::<skill_race_class_info::SkillRaceClassInfo, VanillaTable>(b),
            Self::SkillTiers => load_table_to_enum::<skill_tiers::SkillTiers, VanillaTable>(b),
            Self::SoundAmbience => load_table_to_enum::<sound_ambience::SoundAmbience, VanillaTable>(b),
            Self::SoundCharacterMacroLines => load_table_to_enum::<sound_character_macro_lines::SoundCharacterMacroLines, VanillaTable>(b),
            Self::SoundEntries => load_table_to_enum::<sound_entries::SoundEntries, VanillaTable>(b),
            Self::SoundProviderPreferences => load_table_to_enum::<sound_provider_preferences::SoundProviderPreferences, VanillaTable>(b),
            Self::SoundSamplePreferences => load_table_to_enum::<sound_sample_preferences::SoundSamplePreferences, VanillaTable>(b),
            Self::SoundWaterType => load_table_to_enum::<sound_water_type::SoundWaterType, VanillaTable>(b),
            Self::SpamMessages => load_table_to_enum::<spam_messages::SpamMessages, VanillaTable>(b),
            Self::Spell => load_table_to_enum::<spell::Spell, VanillaTable>(b),
            Self::SpellAuraNames => load_table_to_enum::<spell_aura_names::SpellAuraNames, VanillaTable>(b),
            Self::SpellCastTimes => load_table_to_enum::<spell_cast_times::SpellCastTimes, VanillaTable>(b),
            Self::SpellCategory => load_table_to_enum::<spell_category::SpellCategory, VanillaTable>(b),
            Self::SpellChainEffects => load_table_to_enum::<spell_chain_effects::SpellChainEffects, VanillaTable>(b),
            Self::SpellDispelType => load_table_to_enum::<spell_dispel_type::SpellDispelType, VanillaTable>(b),
            Self::SpellDuration => load_table_to_enum::<spell_duration::SpellDuration, VanillaTable>(b),
            Self::SpellEffectCameraShakes => load_table_to_enum::<spell_effect_camera_shakes::SpellEffectCameraShakes, VanillaTable>(b),
            Self::SpellEffectNames => load_table_to_enum::<spell_effect_names::SpellEffectNames, VanillaTable>(b),
            Self::SpellFocusObject => load_table_to_enum::<spell_focus_object::SpellFocusObject, VanillaTable>(b),
            Self::SpellIcon => load_table_to_enum::<spell_icon::SpellIcon, VanillaTable>(b),
            Self::SpellItemEnchantment => load_table_to_enum::<spell_item_enchantment::SpellItemEnchantment, VanillaTable>(b),
            Self::SpellMechanic => load_table_to_enum::<spell_mechanic::SpellMechanic, VanillaTable>(b),
            Self::SpellRadius => load_table_to_enum::<spell_radius::SpellRadius, VanillaTable>(b),
            Self::SpellRange => load_table_to_enum::<spell_range::SpellRange, VanillaTable>(b),
            Self::SpellShapeshiftForm => load_table_to_enum::<spell_shapeshift_form::SpellShapeshiftForm, VanillaTable>(b),
            Self::SpellVisual => load_table_to_enum::<spell_visual::SpellVisual, VanillaTable>(b),
            Self::SpellVisualEffectName => load_table_to_enum::<spell_visual_effect_name::SpellVisualEffectName, VanillaTable>(b),
            Self::SpellVisualKit => load_table_to_enum::<spell_visual_kit::SpellVisualKit, VanillaTable>(b),
            Self::SpellVisualPrecastTransitions => load_table_to_enum::<spell_visual_precast_transitions::SpellVisualPrecastTransitions, VanillaTable>(b),
            Self::StableSlotPrices => load_table_to_enum::<stable_slot_prices::StableSlotPrices, VanillaTable>(b),
            Self::Startup_Strings => load_table_to_enum::<startup_strings::Startup_Strings, VanillaTable>(b),
            Self::Stationery => load_table_to_enum::<stationery::Stationery, VanillaTable>(b),
            Self::StringLookups => load_table_to_enum::<string_lookups::StringLookups, VanillaTable>(b),
            Self::Talent => load_table_to_enum::<talent::Talent, VanillaTable>(b),
            Self::TalentTab => load_table_to_enum::<talent_tab::TalentTab, VanillaTable>(b),
            Self::TaxiNodes => load_table_to_enum::<taxi_nodes::TaxiNodes, VanillaTable>(b),
            Self::TaxiPath => load_table_to_enum::<taxi_path::TaxiPath, VanillaTable>(b),
            Self::TaxiPathNode => load_table_to_enum::<taxi_path_node::TaxiPathNode, VanillaTable>(b),
            Self::TerrainType => load_table_to_enum::<terrain_type::TerrainType, VanillaTable>(b),
            Self::TerrainTypeSounds => load_table_to_enum::<terrain_type_sounds::TerrainTypeSounds, VanillaTable>(b),
            Self::TransportAnimation => load_table_to_enum::<transport_animation::TransportAnimation, VanillaTable>(b),
            Self::UISoundLookups => load_table_to_enum::<ui_sound_lookups::UISoundLookups, VanillaTable>(b),
            Self::UnitBlood => load_table_to_enum::<unit_blood::UnitBlood, VanillaTable>(b),
            Self::UnitBloodLevels => load_table_to_enum::<unit_blood_levels::UnitBloodLevels, VanillaTable>(b),
            Self::VideoHardware => load_table_to_enum::<video_hardware::VideoHardware, VanillaTable>(b),
            Self::VocalUISounds => load_table_to_enum::<vocal_ui_sounds::VocalUISounds, VanillaTable>(b),
            Self::WMOAreaTable => load_table_to_enum::<wmo_area_table::WMOAreaTable, VanillaTable>(b),
            Self::WeaponImpactSounds => load_table_to_enum::<weapon_impact_sounds::WeaponImpactSounds, VanillaTable>(b),
            Self::WeaponSwingSounds2 => load_table_to_enum::<weapon_swing_sounds2::WeaponSwingSounds2, VanillaTable>(b),
            Self::WorldMapArea => load_table_to_enum::<world_map_area::WorldMapArea, VanillaTable>(b),
            Self::WorldMapContinent => load_table_to_enum::<world_map_continent::WorldMapContinent, VanillaTable>(b),
            Self::WorldMapOverlay => load_table_to_enum::<world_map_overlay::WorldMapOverlay, VanillaTable>(b),
            Self::WorldSafeLocs => load_table_to_enum::<world_safe_locs::WorldSafeLocs, VanillaTable>(b),
            Self::WorldStateUI => load_table_to_enum::<world_state_ui::WorldStateUI, VanillaTable>(b),
            Self::WowError_Strings => load_table_to_enum::<wow_error_strings::WowError_Strings, VanillaTable>(b),
            Self::ZoneIntroMusicTable => load_table_to_enum::<zone_intro_music_table::ZoneIntroMusicTable, VanillaTable>(b),
            Self::ZoneMusic => load_table_to_enum::<zone_music::ZoneMusic, VanillaTable>(b),
        }
    }

}
impl DbcTableWriter for VanillaTable {
    fn write(self, w: &mut impl std::io::Write) -> Result<(), std::io::Error> {
        match self {
            Self::AnimationData(t) => t.write(w),
            Self::AreaPOI(t) => t.write(w),
            Self::AreaTable(t) => t.write(w),
            Self::AreaTrigger(t) => t.write(w),
            Self::AttackAnimKits(t) => t.write(w),
            Self::AttackAnimTypes(t) => t.write(w),
            Self::AuctionHouse(t) => t.write(w),
            Self::BankBagSlotPrices(t) => t.write(w),
            Self::CameraShakes(t) => t.write(w),
            Self::Cfg_Categories(t) => t.write(w),
            Self::Cfg_Configs(t) => t.write(w),
            Self::CharBaseInfo(t) => t.write(w),
            Self::CharHairGeosets(t) => t.write(w),
            Self::CharHairTextures(t) => t.write(w),
            Self::CharSections(t) => t.write(w),
            Self::CharStartOutfit(t) => t.write(w),
            Self::CharVariations(t) => t.write(w),
            Self::CharacterCreateCameras(t) => t.write(w),
            Self::CharacterFacialHairStyles(t) => t.write(w),
            Self::ChatChannels(t) => t.write(w),
            Self::ChatProfanity(t) => t.write(w),
            Self::ChrClasses(t) => t.write(w),
            Self::ChrRaces(t) => t.write(w),
            Self::CinematicCamera(t) => t.write(w),
            Self::CinematicSequences(t) => t.write(w),
            Self::CreatureDisplayInfo(t) => t.write(w),
            Self::CreatureDisplayInfoExtra(t) => t.write(w),
            Self::CreatureFamily(t) => t.write(w),
            Self::CreatureModelData(t) => t.write(w),
            Self::CreatureSoundData(t) => t.write(w),
            Self::CreatureSpellData(t) => t.write(w),
            Self::CreatureType(t) => t.write(w),
            Self::DeathThudLookups(t) => t.write(w),
            Self::DurabilityCosts(t) => t.write(w),
            Self::DurabilityQuality(t) => t.write(w),
            Self::Emotes(t) => t.write(w),
            Self::EmotesText(t) => t.write(w),
            Self::EmotesTextData(t) => t.write(w),
            Self::EmotesTextSound(t) => t.write(w),
            Self::EnvironmentalDamage(t) => t.write(w),
            Self::Exhaustion(t) => t.write(w),
            Self::Faction(t) => t.write(w),
            Self::FactionGroup(t) => t.write(w),
            Self::FactionTemplate(t) => t.write(w),
            Self::FootprintTextures(t) => t.write(w),
            Self::FootstepTerrainLookup(t) => t.write(w),
            Self::GMSurveyCurrentSurvey(t) => t.write(w),
            Self::GMSurveyQuestions(t) => t.write(w),
            Self::GMSurveySurveys(t) => t.write(w),
            Self::GMTicketCategory(t) => t.write(w),
            Self::GameObjectArtKit(t) => t.write(w),
            Self::GameObjectDisplayInfo(t) => t.write(w),
            Self::GameTips(t) => t.write(w),
            Self::GroundEffectDoodad(t) => t.write(w),
            Self::GroundEffectTexture(t) => t.write(w),
            Self::HelmetGeosetVisData(t) => t.write(w),
            Self::ItemBagFamily(t) => t.write(w),
            Self::ItemClass(t) => t.write(w),
            Self::ItemDisplayInfo(t) => t.write(w),
            Self::ItemGroupSounds(t) => t.write(w),
            Self::ItemPetFood(t) => t.write(w),
            Self::ItemRandomProperties(t) => t.write(w),
            Self::ItemSet(t) => t.write(w),
            Self::ItemSubClass(t) => t.write(w),
            Self::ItemSubClassMask(t) => t.write(w),
            Self::ItemVisualEffects(t) => t.write(w),
            Self::ItemVisuals(t) => t.write(w),
            Self::LFGDungeons(t) => t.write(w),
            Self::LanguageWords(t) => t.write(w),
            Self::Languages(t) => t.write(w),
            Self::Light(t) => t.write(w),
            Self::LightFloatBand(t) => t.write(w),
            Self::LightIntBand(t) => t.write(w),
            Self::LightParams(t) => t.write(w),
            Self::LightSkybox(t) => t.write(w),
            Self::LiquidType(t) => t.write(w),
            Self::LoadingScreenTaxiSplines(t) => t.write(w),
            Self::LoadingScreens(t) => t.write(w),
            Self::Lock(t) => t.write(w),
            Self::LockType(t) => t.write(w),
            Self::MailTemplate(t) => t.write(w),
            Self::Map(t) => t.write(w),
            Self::Material(t) => t.write(w),
            Self::NPCSounds(t) => t.write(w),
            Self::NameGen(t) => t.write(w),
            Self::NamesProfanity(t) => t.write(w),
            Self::NamesReserved(t) => t.write(w),
            Self::Package(t) => t.write(w),
            Self::PageTextMaterial(t) => t.write(w),
            Self::PaperDollItemFrame(t) => t.write(w),
            Self::PetLoyalty(t) => t.write(w),
            Self::PetPersonality(t) => t.write(w),
            Self::QuestInfo(t) => t.write(w),
            Self::QuestSort(t) => t.write(w),
            Self::Resistances(t) => t.write(w),
            Self::ServerMessages(t) => t.write(w),
            Self::SheatheSoundLookups(t) => t.write(w),
            Self::SkillCostsData(t) => t.write(w),
            Self::SkillLine(t) => t.write(w),
            Self::SkillLineAbility(t) => t.write(w),
            Self::SkillLineCategory(t) => t.write(w),
            Self::SkillRaceClassInfo(t) => t.write(w),
            Self::SkillTiers(t) => t.write(w),
            Self::SoundAmbience(t) => t.write(w),
            Self::SoundCharacterMacroLines(t) => t.write(w),
            Self::SoundEntries(t) => t.write(w),
            Self::SoundProviderPreferences(t) => t.write(w),
            Self::SoundSamplePreferences(t) => t.write(w),
            Self::SoundWaterType(t) => t.write(w),
            Self::SpamMessages(t) => t.write(w),
            Self::Spell(t) => t.write(w),
            Self::SpellAuraNames(t) => t.write(w),
            Self::SpellCastTimes(t) => t.write(w),
            Self::SpellCategory(t) => t.write(w),
            Self::SpellChainEffects(t) => t.write(w),
            Self::SpellDispelType(t) => t.write(w),
            Self::SpellDuration(t) => t.write(w),
            Self::SpellEffectCameraShakes(t) => t.write(w),
            Self::SpellEffectNames(t) => t.write(w),
            Self::SpellFocusObject(t) => t.write(w),
            Self::SpellIcon(t) => t.write(w),
            Self::SpellItemEnchantment(t) => t.write(w),
            Self::SpellMechanic(t) => t.write(w),
            Self::SpellRadius(t) => t.write(w),
            Self::SpellRange(t) => t.write(w),
            Self::SpellShapeshiftForm(t) => t.write(w),
            Self::SpellVisual(t) => t.write(w),
            Self::SpellVisualEffectName(t) => t.write(w),
            Self::SpellVisualKit(t) => t.write(w),
            Self::SpellVisualPrecastTransitions(t) => t.write(w),
            Self::StableSlotPrices(t) => t.write(w),
            Self::Startup_Strings(t) => t.write(w),
            Self::Stationery(t) => t.write(w),
            Self::StringLookups(t) => t.write(w),
            Self::Talent(t) => t.write(w),
            Self::TalentTab(t) => t.write(w),
            Self::TaxiNodes(t) => t.write(w),
            Self::TaxiPath(t) => t.write(w),
            Self::TaxiPathNode(t) => t.write(w),
            Self::TerrainType(t) => t.write(w),
            Self::TerrainTypeSounds(t) => t.write(w),
            Self::TransportAnimation(t) => t.write(w),
            Self::UISoundLookups(t) => t.write(w),
            Self::UnitBlood(t) => t.write(w),
            Self::UnitBloodLevels(t) => t.write(w),
            Self::VideoHardware(t) => t.write(w),
            Self::VocalUISounds(t) => t.write(w),
            Self::WMOAreaTable(t) => t.write(w),
            Self::WeaponImpactSounds(t) => t.write(w),
            Self::WeaponSwingSounds2(t) => t.write(w),
            Self::WorldMapArea(t) => t.write(w),
            Self::WorldMapContinent(t) => t.write(w),
            Self::WorldMapOverlay(t) => t.write(w),
            Self::WorldSafeLocs(t) => t.write(w),
            Self::WorldStateUI(t) => t.write(w),
            Self::WowError_Strings(t) => t.write(w),
            Self::ZoneIntroMusicTable(t) => t.write(w),
            Self::ZoneMusic(t) => t.write(w),
        }
    }

}
impl std::str::FromStr for VanillaTableName {
    type Err = crate::DbcError;
    fn from_str(s: &str) -> Result<Self, Self::Err> {
        match s {
            "AnimationData" => Ok(VanillaTableName::AnimationData),
            "AreaPOI" => Ok(VanillaTableName::AreaPOI),
            "AreaTable" => Ok(VanillaTableName::AreaTable),
            "AreaTrigger" => Ok(VanillaTableName::AreaTrigger),
            "AttackAnimKits" => Ok(VanillaTableName::AttackAnimKits),
            "AttackAnimTypes" => Ok(VanillaTableName::AttackAnimTypes),
            "AuctionHouse" => Ok(VanillaTableName::AuctionHouse),
            "BankBagSlotPrices" => Ok(VanillaTableName::BankBagSlotPrices),
            "CameraShakes" => Ok(VanillaTableName::CameraShakes),
            "Cfg_Categories" => Ok(VanillaTableName::Cfg_Categories),
            "Cfg_Configs" => Ok(VanillaTableName::Cfg_Configs),
            "CharBaseInfo" => Ok(VanillaTableName::CharBaseInfo),
            "CharHairGeosets" => Ok(VanillaTableName::CharHairGeosets),
            "CharHairTextures" => Ok(VanillaTableName::CharHairTextures),
            "CharSections" => Ok(VanillaTableName::CharSections),
            "CharStartOutfit" => Ok(VanillaTableName::CharStartOutfit),
            "CharVariations" => Ok(VanillaTableName::CharVariations),
            "CharacterCreateCameras" => Ok(VanillaTableName::CharacterCreateCameras),
            "CharacterFacialHairStyles" => Ok(VanillaTableName::CharacterFacialHairStyles),
            "ChatChannels" => Ok(VanillaTableName::ChatChannels),
            "ChatProfanity" => Ok(VanillaTableName::ChatProfanity),
            "ChrClasses" => Ok(VanillaTableName::ChrClasses),
            "ChrRaces" => Ok(VanillaTableName::ChrRaces),
            "CinematicCamera" => Ok(VanillaTableName::CinematicCamera),
            "CinematicSequences" => Ok(VanillaTableName::CinematicSequences),
            "CreatureDisplayInfo" => Ok(VanillaTableName::CreatureDisplayInfo),
            "CreatureDisplayInfoExtra" => Ok(VanillaTableName::CreatureDisplayInfoExtra),
            "CreatureFamily" => Ok(VanillaTableName::CreatureFamily),
            "CreatureModelData" => Ok(VanillaTableName::CreatureModelData),
            "CreatureSoundData" => Ok(VanillaTableName::CreatureSoundData),
            "CreatureSpellData" => Ok(VanillaTableName::CreatureSpellData),
            "CreatureType" => Ok(VanillaTableName::CreatureType),
            "DeathThudLookups" => Ok(VanillaTableName::DeathThudLookups),
            "DurabilityCosts" => Ok(VanillaTableName::DurabilityCosts),
            "DurabilityQuality" => Ok(VanillaTableName::DurabilityQuality),
            "Emotes" => Ok(VanillaTableName::Emotes),
            "EmotesText" => Ok(VanillaTableName::EmotesText),
            "EmotesTextData" => Ok(VanillaTableName::EmotesTextData),
            "EmotesTextSound" => Ok(VanillaTableName::EmotesTextSound),
            "EnvironmentalDamage" => Ok(VanillaTableName::EnvironmentalDamage),
            "Exhaustion" => Ok(VanillaTableName::Exhaustion),
            "Faction" => Ok(VanillaTableName::Faction),
            "FactionGroup" => Ok(VanillaTableName::FactionGroup),
            "FactionTemplate" => Ok(VanillaTableName::FactionTemplate),
            "FootprintTextures" => Ok(VanillaTableName::FootprintTextures),
            "FootstepTerrainLookup" => Ok(VanillaTableName::FootstepTerrainLookup),
            "GMSurveyCurrentSurvey" => Ok(VanillaTableName::GMSurveyCurrentSurvey),
            "GMSurveyQuestions" => Ok(VanillaTableName::GMSurveyQuestions),
            "GMSurveySurveys" => Ok(VanillaTableName::GMSurveySurveys),
            "GMTicketCategory" => Ok(VanillaTableName::GMTicketCategory),
            "GameObjectArtKit" => Ok(VanillaTableName::GameObjectArtKit),
            "GameObjectDisplayInfo" => Ok(VanillaTableName::GameObjectDisplayInfo),
            "GameTips" => Ok(VanillaTableName::GameTips),
            "GroundEffectDoodad" => Ok(VanillaTableName::GroundEffectDoodad),
            "GroundEffectTexture" => Ok(VanillaTableName::GroundEffectTexture),
            "HelmetGeosetVisData" => Ok(VanillaTableName::HelmetGeosetVisData),
            "ItemBagFamily" => Ok(VanillaTableName::ItemBagFamily),
            "ItemClass" => Ok(VanillaTableName::ItemClass),
            "ItemDisplayInfo" => Ok(VanillaTableName::ItemDisplayInfo),
            "ItemGroupSounds" => Ok(VanillaTableName::ItemGroupSounds),
            "ItemPetFood" => Ok(VanillaTableName::ItemPetFood),
            "ItemRandomProperties" => Ok(VanillaTableName::ItemRandomProperties),
            "ItemSet" => Ok(VanillaTableName::ItemSet),
            "ItemSubClass" => Ok(VanillaTableName::ItemSubClass),
            "ItemSubClassMask" => Ok(VanillaTableName::ItemSubClassMask),
            "ItemVisualEffects" => Ok(VanillaTableName::ItemVisualEffects),
            "ItemVisuals" => Ok(VanillaTableName::ItemVisuals),
            "LFGDungeons" => Ok(VanillaTableName::LFGDungeons),
            "LanguageWords" => Ok(VanillaTableName::LanguageWords),
            "Languages" => Ok(VanillaTableName::Languages),
            "Light" => Ok(VanillaTableName::Light),
            "LightFloatBand" => Ok(VanillaTableName::LightFloatBand),
            "LightIntBand" => Ok(VanillaTableName::LightIntBand),
            "LightParams" => Ok(VanillaTableName::LightParams),
            "LightSkybox" => Ok(VanillaTableName::LightSkybox),
            "LiquidType" => Ok(VanillaTableName::LiquidType),
            "LoadingScreenTaxiSplines" => Ok(VanillaTableName::LoadingScreenTaxiSplines),
            "LoadingScreens" => Ok(VanillaTableName::LoadingScreens),
            "Lock" => Ok(VanillaTableName::Lock),
            "LockType" => Ok(VanillaTableName::LockType),
            "MailTemplate" => Ok(VanillaTableName::MailTemplate),
            "Map" => Ok(VanillaTableName::Map),
            "Material" => Ok(VanillaTableName::Material),
            "NPCSounds" => Ok(VanillaTableName::NPCSounds),
            "NameGen" => Ok(VanillaTableName::NameGen),
            "NamesProfanity" => Ok(VanillaTableName::NamesProfanity),
            "NamesReserved" => Ok(VanillaTableName::NamesReserved),
            "Package" => Ok(VanillaTableName::Package),
            "PageTextMaterial" => Ok(VanillaTableName::PageTextMaterial),
            "PaperDollItemFrame" => Ok(VanillaTableName::PaperDollItemFrame),
            "PetLoyalty" => Ok(VanillaTableName::PetLoyalty),
            "PetPersonality" => Ok(VanillaTableName::PetPersonality),
            "QuestInfo" => Ok(VanillaTableName::QuestInfo),
            "QuestSort" => Ok(VanillaTableName::QuestSort),
            "Resistances" => Ok(VanillaTableName::Resistances),
            "ServerMessages" => Ok(VanillaTableName::ServerMessages),
            "SheatheSoundLookups" => Ok(VanillaTableName::SheatheSoundLookups),
            "SkillCostsData" => Ok(VanillaTableName::SkillCostsData),
            "SkillLine" => Ok(VanillaTableName::SkillLine),
            "SkillLineAbility" => Ok(VanillaTableName::SkillLineAbility),
            "SkillLineCategory" => Ok(VanillaTableName::SkillLineCategory),
            "SkillRaceClassInfo" => Ok(VanillaTableName::SkillRaceClassInfo),
            "SkillTiers" => Ok(VanillaTableName::SkillTiers),
            "SoundAmbience" => Ok(VanillaTableName::SoundAmbience),
            "SoundCharacterMacroLines" => Ok(VanillaTableName::SoundCharacterMacroLines),
            "SoundEntries" => Ok(VanillaTableName::SoundEntries),
            "SoundProviderPreferences" => Ok(VanillaTableName::SoundProviderPreferences),
            "SoundSamplePreferences" => Ok(VanillaTableName::SoundSamplePreferences),
            "SoundWaterType" => Ok(VanillaTableName::SoundWaterType),
            "SpamMessages" => Ok(VanillaTableName::SpamMessages),
            "Spell" => Ok(VanillaTableName::Spell),
            "SpellAuraNames" => Ok(VanillaTableName::SpellAuraNames),
            "SpellCastTimes" => Ok(VanillaTableName::SpellCastTimes),
            "SpellCategory" => Ok(VanillaTableName::SpellCategory),
            "SpellChainEffects" => Ok(VanillaTableName::SpellChainEffects),
            "SpellDispelType" => Ok(VanillaTableName::SpellDispelType),
            "SpellDuration" => Ok(VanillaTableName::SpellDuration),
            "SpellEffectCameraShakes" => Ok(VanillaTableName::SpellEffectCameraShakes),
            "SpellEffectNames" => Ok(VanillaTableName::SpellEffectNames),
            "SpellFocusObject" => Ok(VanillaTableName::SpellFocusObject),
            "SpellIcon" => Ok(VanillaTableName::SpellIcon),
            "SpellItemEnchantment" => Ok(VanillaTableName::SpellItemEnchantment),
            "SpellMechanic" => Ok(VanillaTableName::SpellMechanic),
            "SpellRadius" => Ok(VanillaTableName::SpellRadius),
            "SpellRange" => Ok(VanillaTableName::SpellRange),
            "SpellShapeshiftForm" => Ok(VanillaTableName::SpellShapeshiftForm),
            "SpellVisual" => Ok(VanillaTableName::SpellVisual),
            "SpellVisualEffectName" => Ok(VanillaTableName::SpellVisualEffectName),
            "SpellVisualKit" => Ok(VanillaTableName::SpellVisualKit),
            "SpellVisualPrecastTransitions" => Ok(VanillaTableName::SpellVisualPrecastTransitions),
            "StableSlotPrices" => Ok(VanillaTableName::StableSlotPrices),
            "Startup_Strings" => Ok(VanillaTableName::Startup_Strings),
            "Stationery" => Ok(VanillaTableName::Stationery),
            "StringLookups" => Ok(VanillaTableName::StringLookups),
            "Talent" => Ok(VanillaTableName::Talent),
            "TalentTab" => Ok(VanillaTableName::TalentTab),
            "TaxiNodes" => Ok(VanillaTableName::TaxiNodes),
            "TaxiPath" => Ok(VanillaTableName::TaxiPath),
            "TaxiPathNode" => Ok(VanillaTableName::TaxiPathNode),
            "TerrainType" => Ok(VanillaTableName::TerrainType),
            "TerrainTypeSounds" => Ok(VanillaTableName::TerrainTypeSounds),
            "TransportAnimation" => Ok(VanillaTableName::TransportAnimation),
            "UISoundLookups" => Ok(VanillaTableName::UISoundLookups),
            "UnitBlood" => Ok(VanillaTableName::UnitBlood),
            "UnitBloodLevels" => Ok(VanillaTableName::UnitBloodLevels),
            "VideoHardware" => Ok(VanillaTableName::VideoHardware),
            "VocalUISounds" => Ok(VanillaTableName::VocalUISounds),
            "WMOAreaTable" => Ok(VanillaTableName::WMOAreaTable),
            "WeaponImpactSounds" => Ok(VanillaTableName::WeaponImpactSounds),
            "WeaponSwingSounds2" => Ok(VanillaTableName::WeaponSwingSounds2),
            "WorldMapArea" => Ok(VanillaTableName::WorldMapArea),
            "WorldMapContinent" => Ok(VanillaTableName::WorldMapContinent),
            "WorldMapOverlay" => Ok(VanillaTableName::WorldMapOverlay),
            "WorldSafeLocs" => Ok(VanillaTableName::WorldSafeLocs),
            "WorldStateUI" => Ok(VanillaTableName::WorldStateUI),
            "WowError_Strings" => Ok(VanillaTableName::WowError_Strings),
            "ZoneIntroMusicTable" => Ok(VanillaTableName::ZoneIntroMusicTable),
            "ZoneMusic" => Ok(VanillaTableName::ZoneMusic),
            _ => Err(crate::DbcError::InvalidTableName(s.to_string()))
        }
    }
}

